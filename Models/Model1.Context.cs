//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ModeloVistaControlador_MVC_.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AYPEntities : DbContext
    {
        public AYPEntities()
            : base("name=AYPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<cliente> cliente { get; set; }
        public virtual DbSet<materiales> materiales { get; set; }
        public virtual DbSet<presupuesto> presupuesto { get; set; }
        public virtual DbSet<proovedores> proovedores { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<trabajadores> trabajadores { get; set; }
    
        public virtual ObjectResult<Anular_Cliente_Result> Anular_Cliente(string pid_Cliente)
        {
            var pid_ClienteParameter = pid_Cliente != null ?
                new ObjectParameter("Pid_Cliente", pid_Cliente) :
                new ObjectParameter("Pid_Cliente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Anular_Cliente_Result>("Anular_Cliente", pid_ClienteParameter);
        }
    
        public virtual int Anular_Material(string pid_material)
        {
            var pid_materialParameter = pid_material != null ?
                new ObjectParameter("Pid_material", pid_material) :
                new ObjectParameter("Pid_material", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Anular_Material", pid_materialParameter);
        }
    
        public virtual int Anular_presupuesto(string pid_presupuesto)
        {
            var pid_presupuestoParameter = pid_presupuesto != null ?
                new ObjectParameter("Pid_presupuesto", pid_presupuesto) :
                new ObjectParameter("Pid_presupuesto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Anular_presupuesto", pid_presupuestoParameter);
        }
    
        public virtual int Anular_Provedor(string pnit_prooveedor)
        {
            var pnit_prooveedorParameter = pnit_prooveedor != null ?
                new ObjectParameter("Pnit_prooveedor", pnit_prooveedor) :
                new ObjectParameter("Pnit_prooveedor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Anular_Provedor", pnit_prooveedorParameter);
        }
    
        public virtual int Anular_Trabajador(string pid_trabajador)
        {
            var pid_trabajadorParameter = pid_trabajador != null ?
                new ObjectParameter("Pid_trabajador", pid_trabajador) :
                new ObjectParameter("Pid_trabajador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Anular_Trabajador", pid_trabajadorParameter);
        }
    
        public virtual ObjectResult<consultar_cliente_Result> consultar_cliente(Nullable<int> id_cliente)
        {
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<consultar_cliente_Result>("consultar_cliente", id_clienteParameter);
        }
    
        public virtual ObjectResult<consultar_materiales_Result> consultar_materiales(Nullable<int> id_material)
        {
            var id_materialParameter = id_material.HasValue ?
                new ObjectParameter("id_material", id_material) :
                new ObjectParameter("id_material", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<consultar_materiales_Result>("consultar_materiales", id_materialParameter);
        }
    
        public virtual ObjectResult<consultar_presupuesto_Result> consultar_presupuesto(Nullable<int> id_presupuesto)
        {
            var id_presupuestoParameter = id_presupuesto.HasValue ?
                new ObjectParameter("id_presupuesto", id_presupuesto) :
                new ObjectParameter("id_presupuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<consultar_presupuesto_Result>("consultar_presupuesto", id_presupuestoParameter);
        }
    
        public virtual ObjectResult<consultar_provedor_Result> consultar_provedor(Nullable<int> nit_provedor)
        {
            var nit_provedorParameter = nit_provedor.HasValue ?
                new ObjectParameter("nit_provedor", nit_provedor) :
                new ObjectParameter("nit_provedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<consultar_provedor_Result>("consultar_provedor", nit_provedorParameter);
        }
    
        public virtual ObjectResult<consultar_trabajadores_Result> consultar_trabajadores(Nullable<int> id_trabajador)
        {
            var id_trabajadorParameter = id_trabajador.HasValue ?
                new ObjectParameter("id_trabajador", id_trabajador) :
                new ObjectParameter("id_trabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<consultar_trabajadores_Result>("consultar_trabajadores", id_trabajadorParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_Cliente(Nullable<int> id_cliente, string nom_cliente, string apellido_cliente, Nullable<long> telefono)
        {
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            var nom_clienteParameter = nom_cliente != null ?
                new ObjectParameter("nom_cliente", nom_cliente) :
                new ObjectParameter("nom_cliente", typeof(string));
    
            var apellido_clienteParameter = apellido_cliente != null ?
                new ObjectParameter("apellido_cliente", apellido_cliente) :
                new ObjectParameter("apellido_cliente", typeof(string));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Cliente", id_clienteParameter, nom_clienteParameter, apellido_clienteParameter, telefonoParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_materiales(Nullable<int> id_material, string nom_material, string caracteristicas, string tipo_material, string uso)
        {
            var id_materialParameter = id_material.HasValue ?
                new ObjectParameter("id_material", id_material) :
                new ObjectParameter("id_material", typeof(int));
    
            var nom_materialParameter = nom_material != null ?
                new ObjectParameter("nom_material", nom_material) :
                new ObjectParameter("nom_material", typeof(string));
    
            var caracteristicasParameter = caracteristicas != null ?
                new ObjectParameter("caracteristicas", caracteristicas) :
                new ObjectParameter("caracteristicas", typeof(string));
    
            var tipo_materialParameter = tipo_material != null ?
                new ObjectParameter("tipo_material", tipo_material) :
                new ObjectParameter("tipo_material", typeof(string));
    
            var usoParameter = uso != null ?
                new ObjectParameter("uso", uso) :
                new ObjectParameter("uso", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_materiales", id_materialParameter, nom_materialParameter, caracteristicasParameter, tipo_materialParameter, usoParameter);
        }
    
        public virtual int SP_presupuesto(Nullable<int> id_presupuesto, string nom_presupuesto, string lugar_obra, Nullable<double> area_obra)
        {
            var id_presupuestoParameter = id_presupuesto.HasValue ?
                new ObjectParameter("id_presupuesto", id_presupuesto) :
                new ObjectParameter("id_presupuesto", typeof(int));
    
            var nom_presupuestoParameter = nom_presupuesto != null ?
                new ObjectParameter("nom_presupuesto", nom_presupuesto) :
                new ObjectParameter("nom_presupuesto", typeof(string));
    
            var lugar_obraParameter = lugar_obra != null ?
                new ObjectParameter("lugar_obra", lugar_obra) :
                new ObjectParameter("lugar_obra", typeof(string));
    
            var area_obraParameter = area_obra.HasValue ?
                new ObjectParameter("area_obra", area_obra) :
                new ObjectParameter("area_obra", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_presupuesto", id_presupuestoParameter, nom_presupuestoParameter, lugar_obraParameter, area_obraParameter);
        }
    
        public virtual int SP_proovedores(Nullable<int> nit_prooveedor, Nullable<long> tel_prooveedor, string correo_electronico, string ubicacion_proveedor, string categoria_proveedor)
        {
            var nit_prooveedorParameter = nit_prooveedor.HasValue ?
                new ObjectParameter("nit_prooveedor", nit_prooveedor) :
                new ObjectParameter("nit_prooveedor", typeof(int));
    
            var tel_prooveedorParameter = tel_prooveedor.HasValue ?
                new ObjectParameter("tel_prooveedor", tel_prooveedor) :
                new ObjectParameter("tel_prooveedor", typeof(long));
    
            var correo_electronicoParameter = correo_electronico != null ?
                new ObjectParameter("correo_electronico", correo_electronico) :
                new ObjectParameter("correo_electronico", typeof(string));
    
            var ubicacion_proveedorParameter = ubicacion_proveedor != null ?
                new ObjectParameter("ubicacion_proveedor", ubicacion_proveedor) :
                new ObjectParameter("ubicacion_proveedor", typeof(string));
    
            var categoria_proveedorParameter = categoria_proveedor != null ?
                new ObjectParameter("categoria_proveedor", categoria_proveedor) :
                new ObjectParameter("categoria_proveedor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_proovedores", nit_prooveedorParameter, tel_prooveedorParameter, correo_electronicoParameter, ubicacion_proveedorParameter, categoria_proveedorParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int SP_Trabajadores(Nullable<int> id_trabajador, string nom_trabajador, string area_especialidad, Nullable<int> años_experiencia, Nullable<int> grupo_trabajo)
        {
            var id_trabajadorParameter = id_trabajador.HasValue ?
                new ObjectParameter("id_trabajador", id_trabajador) :
                new ObjectParameter("id_trabajador", typeof(int));
    
            var nom_trabajadorParameter = nom_trabajador != null ?
                new ObjectParameter("nom_trabajador", nom_trabajador) :
                new ObjectParameter("nom_trabajador", typeof(string));
    
            var area_especialidadParameter = area_especialidad != null ?
                new ObjectParameter("area_especialidad", area_especialidad) :
                new ObjectParameter("area_especialidad", typeof(string));
    
            var años_experienciaParameter = años_experiencia.HasValue ?
                new ObjectParameter("años_experiencia", años_experiencia) :
                new ObjectParameter("años_experiencia", typeof(int));
    
            var grupo_trabajoParameter = grupo_trabajo.HasValue ?
                new ObjectParameter("grupo_trabajo", grupo_trabajo) :
                new ObjectParameter("grupo_trabajo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Trabajadores", id_trabajadorParameter, nom_trabajadorParameter, area_especialidadParameter, años_experienciaParameter, grupo_trabajoParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
